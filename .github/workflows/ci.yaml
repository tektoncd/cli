name: ci

on: [pull_request] # yamllint disable-line rule:truthy

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull-request.number || github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

permissions:
  contents: read
  checks: write # Used to annotate code in the PR

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
    - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34  # v5.3.0
      with:
        go-version-file: "go.mod"
    - name: build
      run: |
        go build -v ./...
  linting:
    needs: [build]
    name: lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
    - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34  # v5.3.0
      with:
        go-version-file: "go.mod"
    - name: gofmt
      run: |
        gofmt_out=$(gofmt -d $(find * -name '*.go' ! -path 'vendor/*' ! -path 'third_party/*'))
        if [[ -n "$gofmt_out" ]]; then
            failed=1
        fi
        echo "$gofmt_out"
    - name: golangci-lint
      uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8.0.0
      with:
        version: v2.1.6
        only-new-issues: true
        args: --timeout=10m
    - name: yamllint
      run: |
        apt update && apt install -y yamllint
        yamllint -c .yamllint $(find . -path ./vendor -prune -o -type f -regex ".*y[a]ml" -print | tr '\n' ' ')
    - name: check-license
      run: |
        go install github.com/google/go-licenses@v1.0.0
        go-licenses check ./...
  tests:
    needs: [build]
    name: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
    - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34  # v5.3.0
      with:
        go-version-file: "go.mod"
    - name: build
      run: |
        make test-unit-verbose-and-race
  generated:
    needs: [build]
    name: Check generated code
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
    - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34  # v5.3.0
      with:
        go-version-file: "go.mod"
    - name: generated
      run: |
        go install github.com/google/go-licenses@v1.0.0 # Not sure why it is needed here
        ./hack/verify-codegen.sh
  multi-arch-build:
    needs: [build]
    name: Multi-arch build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
    - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34  # v5.3.0
      with:
        go-version-file: "go.mod"
    - name: make cross
      run: |
        make cross
  e2e-tests:
    needs: [build]
    uses: ./.github/workflows/e2e-matrix.yml
