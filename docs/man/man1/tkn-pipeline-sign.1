.TH "TKN\-PIPELINE\-SIGN" "1" "" "Auto generated by spf13/cobra" "" 
.nh
.ad l


.SH NAME
.PP
tkn\-pipeline\-sign \- Sign Tekton Pipeline


.SH SYNOPSIS
.PP
\fBtkn pipeline sign\fP


.SH DESCRIPTION
.PP
.RS

.nf
Sign the Tekton Pipeline with user provided private key file or KMS reference. Key files support ecdsa, ed25519, rsa.
For KMS:
* GCP, this should have the structure of gcpkms://projects/<project>/locations/<location>/keyRings/<keyring>/cryptoKeys/<key> where location, keyring, and key are filled in appropriately. Run "gcloud auth application\-default login" to authenticate
* Vault, this should have the structure of hashivault://<keyname>, where the keyname is filled out appropriately.
* AWS, this should have the structure of awskms://[ENDPOINT]/[ID/ALIAS/ARN] (endpoint optional).
* Azure, this should have the structure of azurekms://[VAULT\_NAME][VAULT\_URL]/[KEY\_NAME].

.fi
.RE


.SH OPTIONS
.PP
\fB\-\-allow\-missing\-template\-keys\fP[=true]
    If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats.

.PP
\fB\-\-api\-version\fP="v1"
    apiVersion of the Pipeline to be signed

.PP
\fB\-f\fP, \fB\-\-file\-name\fP=""
    Fle name of the signed pipeline, using the original file name will overwrite the file

.PP
\fB\-h\fP, \fB\-\-help\fP[=false]
    help for sign

.PP
\fB\-K\fP, \fB\-\-key\-file\fP=""
    Key file

.PP
\fB\-m\fP, \fB\-\-kms\-key\fP=""
    KMS key url

.PP
\fB\-o\fP, \fB\-\-output\fP=""
    Output format. One of: (json, yaml, name, go\-template, go\-template\-file, template, templatefile, jsonpath, jsonpath\-as\-json, jsonpath\-file).

.PP
\fB\-\-show\-managed\-fields\fP[=false]
    If true, keep the managedFields when printing objects in JSON or YAML format.

.PP
\fB\-\-template\fP=""
    Template string or path to template file to use when \-o=go\-template, \-o=go\-template\-file. The template format is golang templates [
\[la]http://golang.org/pkg/text/template/#pkg-overview\[ra]].


.SH OPTIONS INHERITED FROM PARENT COMMANDS
.PP
\fB\-c\fP, \fB\-\-context\fP=""
    name of the kubeconfig context to use (default: kubectl config current\-context)

.PP
\fB\-k\fP, \fB\-\-kubeconfig\fP=""
    kubectl config file (default: $HOME/.kube/config)

.PP
\fB\-n\fP, \fB\-\-namespace\fP=""
    namespace to use (default: from $KUBECONFIG)

.PP
\fB\-C\fP, \fB\-\-no\-color\fP[=false]
    disable coloring (default: false)


.SH EXAMPLE
.PP
Sign a Pipeline pipeline.yaml:
    tkn pipeline sign pipeline.yaml \-K=cosign.key \-f=signed.yaml
or using kms
    tkn pipeline sign pipeline.yaml \-m=gcpkms://projects/PROJECTID/locations/LOCATION/keyRings/KEYRING/cryptoKeys/KEY/cryptoKeyVersions/VERSION \-f=signed.yaml


.SH SEE ALSO
.PP
\fBtkn\-pipeline(1)\fP
