#!/usr/bin/make -f

TKN := obj-$(DEB_HOST_GNU_TYPE)/bin/tkn

DATE_FMT = %Y-%m-%dT%H:%M:%S%z
ifdef SOURCE_DATE_EPOCH
	BUILD_DATE ?= $(shell date -u -d "@$(SOURCE_DATE_EPOCH)" "+$(DATE_FMT)" 2>/dev/null || date -u -r "$(SOURCE_DATE_EPOCH)" "+$(DATE_FMT)" 2>/dev/null || date -u "+$(DATE_FMT)")
else
	BUILD_DATE ?= $(shell date "+$(DATE_FMT)")
endif
BUILD_DATE := $(BUILD_DATE:+0000=Z)

%:
	dh $@

override_dh_auto_build:
	@set -x ; export XDG_CACHE_HOME=/tmp/cache ; \
	RELEASED_VERSION=`curl -s  https://api.github.com/repos/tektoncd/cli/releases/latest|python3 -c "import sys, json;x=json.load(sys.stdin);print(x['tag_name'])"|sed 's/^v//'` ; test -n "$$RELEASED_VERSION" || RELEASED_VERSION=$(BUILD_DATE) ; \
	test -e ./debian/VERSION && VERSION=`cat debian/VERSION` || VERSION=$$RELEASED_VERSION ; \
		go build -mod=vendor -v -o ${TKN} -ldflags "-X github.com/tektoncd/cli/pkg/cmd/version.clientVersion=$$VERSION" ./cmd/tkn
	$(TKN) completion zsh > debian/tkn.zsh-completion
	$(TKN) completion bash > debian/tektoncd-cli.bash-completion

override_dh_auto_test:

override_dh_auto_install:
	dh_auto_install -O--buildsystem=golang
	install -D -m644 debian/tkn.zsh-completion debian/tektoncd-cli/usr/share/zsh/vendor-completions/_tkn
	install -D -m644 debian/tkn.zsh-completion debian/tektoncd-cli/usr/share/bash-completion/completions/tkn
