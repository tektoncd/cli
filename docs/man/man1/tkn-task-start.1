.TH "TKN\-TASK\-START" "1" "" "Auto generated by spf13/cobra" "" 
.nh
.ad l


.SH NAME
.PP
tkn\-task\-start \- Start Tasks


.SH SYNOPSIS
.PP
\fBtkn task start [RESOURCES...] [PARAMS...] [SERVICEACCOUNT]\fP


.SH DESCRIPTION
.PP
Start Tasks


.SH OPTIONS
.PP
\fB\-\-dry\-run\fP[=false]
    preview TaskRun without running it

.PP
\fB\-f\fP, \fB\-\-filename\fP=""
    local or remote file name containing a Task definition to start a TaskRun

.PP
\fB\-h\fP, \fB\-\-help\fP[=false]
    help for start

.PP
\fB\-i\fP, \fB\-\-inputresource\fP=[]
    pass the input resource name and ref as name=ref

.PP
\fB\-l\fP, \fB\-\-labels\fP=[]
    pass labels as label=value.

.PP
\fB\-L\fP, \fB\-\-last\fP[=false]
    re\-run the Task using last TaskRun values

.PP
\fB\-\-output\fP=""
    format of TaskRun (yaml or json)

.PP
\fB\-o\fP, \fB\-\-outputresource\fP=[]
    pass the output resource name and ref as name=ref

.PP
\fB\-p\fP, \fB\-\-param\fP=[]
    pass the param as key=value for string type, or key=value1,value2,... for array type

.PP
\fB\-\-pod\-template\fP=""
    local or remote file containing a PodTemplate definition

.PP
\fB\-\-prefix\-name\fP=""
    specify a prefix for the TaskRun name (must be lowercase alphanumeric characters)

.PP
\fB\-s\fP, \fB\-\-serviceaccount\fP=""
    pass the serviceaccount name

.PP
\fB\-\-showlog\fP[=false]
    show logs right after starting the Task

.PP
\fB\-\-timeout\fP=""
    timeout for TaskRun

.PP
\fB\-\-use\-param\-defaults\fP[=false]
    use default parameter values without prompting for input

.PP
\fB\-\-use\-taskrun\fP=""
    specify a TaskRun name to use its values to re\-run the TaskRun

.PP
\fB\-w\fP, \fB\-\-workspace\fP=[]
    pass one or more workspaces to map to the corresponding physical volumes


.SH OPTIONS INHERITED FROM PARENT COMMANDS
.PP
\fB\-c\fP, \fB\-\-context\fP=""
    name of the kubeconfig context to use (default: kubectl config current\-context)

.PP
\fB\-k\fP, \fB\-\-kubeconfig\fP=""
    kubectl config file (default: $HOME/.kube/config)

.PP
\fB\-n\fP, \fB\-\-namespace\fP=""
    namespace to use (default: from $KUBECONFIG)

.PP
\fB\-C\fP, \fB\-\-no\-color\fP[=false]
    disable coloring (default: false)


.SH EXAMPLE
.PP
Start Task foo by creating a TaskRun named "foo\-run\-xyz123" from namespace 'bar':

.PP
.RS

.nf
tkn task start foo \-s ServiceAccountName \-n bar

.fi
.RE

.PP
The Task can either be specified by reference in a cluster using the positional argument
or in a file using the \-\-filename argument.

.PP
For params values, if you want to provide multiple values, provide them comma separated
like cat,foo,bar

.PP
For passing the workspaces via flags:

.RS
.IP \(bu 2
In case of emptyDir, you can pass it like \-w name=my\-empty\-dir,emptyDir=
.IP \(bu 2
In case of configMap, you can pass it like \-w name=my\-config,config=rpg,item=ultimav=1
.IP \(bu 2
In case of secrets, you can pass it like \-w name=my\-secret,secret=secret\-name
.IP \(bu 2
In case of pvc, you can pass it like \-w name=my\-pvc,claimName=pvc1
.IP \(bu 2
In case of volumeClaimTemplate, you can pass it like \-w name=my\-volume\-claim\-template,volumeClaimTemplateFile=workspace\-template.yaml
but before you need to create a workspace\-template.yaml file. Sample contents of the file are as follows:
spec:
accessModes:

.RS
.IP \(bu 2
ReadWriteOnce
resources:
requests:
storage: 1Gi

.RE

.RE


.SH SEE ALSO
.PP
\fBtkn\-task(1)\fP
